class Solution {
   public int divide(int dividend, int divisor) {
    if (dividend == 0) return 0;
    if (divisor == 1) return dividend;
    if (divisor == -1) {
        if (dividend > Integer.MIN_VALUE) {
            return -dividend;
        }
        return Integer.MAX_VALUE;
    }
    
    long ldividend = Math.abs((long)dividend);
    long ldivisor = Math.abs((long)divisor);
    
    int sign = (dividend > 0) ^ (divisor > 0) ? -1 : 1;

    long result = 0;
    while (ldividend >= ldivisor) {
        long temp = ldivisor;
        long multiple = 1;
        while (ldividend >= (temp << 1)) {
            temp <<= 1;
            multiple <<= 1;
        }
        ldividend -= temp;
        result += multiple;
    }

    result *= sign;
    
    if (result > Integer.MAX_VALUE) {
        return Integer.MAX_VALUE;
    } else if (result < Integer.MIN_VALUE) {
        return Integer.MIN_VALUE;
    } else {
        return (int) result;
    }
}

}
